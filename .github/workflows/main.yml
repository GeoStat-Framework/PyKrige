name: Continuous Integration

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "main"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  source_check:
    name: source check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -v --editable .[lint]

      - name: black check
        run: |
          python -m black --check --diff --color .

      - name: isort check
        run: |
          python -m isort --check --diff --color .

      - name: cython-lint check
        run: |
          cython-lint src/pykrige/

  build_wheels:
    name: wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-15-intel, macos-latest] # windows-11-arm (no scipy)

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        with:
          output-dir: dist-wheel-${{ matrix.os }}

      - uses: actions/upload-artifact@v4
        with:
          name: dist-wheel-${{ matrix.os }}
          path: ./dist-wheel-${{ matrix.os }}/*.whl

  build_sdist:
    name: sdist on ${{ matrix.os }} with py ${{ matrix.ver.py }} numpy${{ matrix.ver.np }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-14]
        ver:
          - { py: "3.9", np: "==1.20.0", sp: "==1.5.4", sk: "==0.24.0" }
          - { py: "3.10", np: "==1.21.6", sp: "==1.7.2", sk: "==1.0.2" }
          - { py: "3.11", np: "==1.23.2", sp: "==1.9.2", sk: "==1.1.3" }
          - { py: "3.12", np: "==1.26.2", sp: "==1.11.2", sk: "==1.3.1" }
          - { py: "3.13", np: "==2.1.0", sp: "==1.14.1", sk: "==1.5.2" }
          - { py: "3.14", np: "==2.3.2", sp: "==1.16.1", sk: "==1.7.2" }
          - { py: "3.14", np: ">=2.3.2", sp: ">=1.16.1", sk: ">=1.7.2" }
        exclude:
          - os: macos-14
            ver: { py: "3.9", np: "==1.20.0", sp: "==1.5.4", sk: "==0.24.0" }
          - os: macos-14
            ver: { py: "3.10", np: "==1.21.6", sp: "==1.7.2", sk: "==1.0.2" }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Set up Python ${{ matrix.ver.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.ver.py }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Install pykrige
        run: |
          pip install -v --editable .[test]

      - name: Install pinned dependencies
        run: |
          pip install "numpy${{ matrix.ver.np }}" "scipy${{ matrix.ver.sp }}" "scikit-learn${{ matrix.ver.sk }}"

      - name: Run tests
        run: |
          python -m pytest -v tests/

      - name: Build sdist
        run: |
          # PEP 517 package builder from pypa
          python -m build --sdist --outdir dist-sdist .

      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' && matrix.ver.py == '3.11'
        with:
          name: dist-sdist
          path: dist-sdist/*.tar.gz

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "coveralls>=3.0.0"

      - name: Install pykrige
        run: |
          pip install -v --editable .[test]

      - name: Run tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install "numpy${{ matrix.ver.np }}"
          python -m pytest --cov pykrige --cov-report term-missing -v tests/
          python -m coveralls --service=github

  upload_to_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - name: Publish to Test PyPI
        # only if working on main
        if: github.ref == 'refs/heads/main'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish to PyPI
        # only if tagged
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
