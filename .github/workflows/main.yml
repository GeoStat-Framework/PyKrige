name: Continuous Integration

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "main"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  source_check:
    name: source check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -v --editable .[lint]

      - name: black check
        run: |
          python -m black --check  --diff --color .

      - name: isort check
        run: |
          python -m isort --check --diff --color .

      - name: cython-lint check
        run: |
          cython-lint src/pykrige/

  build_wheels:
    name: wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.18.0
        with:
          output-dir: dist

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl

  build_sdist:
    name: sdist on ${{ matrix.os }} with py ${{ matrix.ver.py }} numpy${{ matrix.ver.np }} scipy${{ matrix.ver.sp }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        # https://github.com/scipy/oldest-supported-numpy/blob/main/setup.cfg
        ver:
          - {py: '3.8', np: '==1.20.0', sp: '==1.5.4'}
          - {py: '3.9', np: '==1.20.0', sp: '==1.5.4'}
          - {py: '3.10', np: '==1.21.6', sp: '==1.7.2'}
          - {py: '3.11', np: '==1.23.2', sp: '==1.9.2'}
          - {py: '3.12', np: '==1.26.2', sp: '==1.11.2'}
          - {py: '3.12', np: '>=2.0.0rc1', sp: '>=1.13.0'}
        exclude:
          - os: macos-14
            ver: {py: '3.8', np: '==1.20.0', sp: '==1.5.4'}
          - os: macos-14
            ver: {py: '3.9', np: '==1.20.0', sp: '==1.5.4'}
          - os: macos-14
            ver: {py: '3.10', np: '==1.21.6', sp: '==1.7.2'}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Set up Python ${{ matrix.ver.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.ver.py }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build "coveralls>=3.0.0"

      - name: Install PyKrige
        run: |
          pip install -v --editable .[test]

      - name: Run tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install "numpy${{ matrix.ver.np }}" "scipy${{ matrix.ver.sp }}"
          python -m pytest --cov pykrige --cov-report term-missing -v tests/
          python -m coveralls --service=github

      - name: Build sdist
        run: |
          # PEP 517 package builder from pypa
          python -m build --sdist --outdir dist .

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest' && matrix.ver.py == '3.9'
        with:
          path: dist/*.tar.gz

  upload_to_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4.1.7
        with:
          name: artifact
          path: dist

      - name: Publish to Test PyPI
        if: github.ref == 'refs/heads/main'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish to PyPI
        # only if tagged
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
