language: python
python: 3.8

# setuptools-scm needs all tags in order to obtain a proper version
git:
  depth: false

env:
  global:
    - TWINE_USERNAME=geostatframework
    - CIBW_BEFORE_BUILD="pip install numpy==1.17.3 scipy==1.3.2 cython==0.29.14 setuptools"
    - CIBW_TEST_REQUIRES="pytest scikit-learn gstools"
    - CIBW_TEST_COMMAND="pytest -v {project}/tests"
    - OMP_NUM_THREADS=2

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" = windows ]]; then
        choco install python --version 3.8.0
        export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
        # make sure it's on PATH as 'python3'
        ln -s /c/Python38/python.exe /c/Python38/python3.exe
    fi

install: python3 -m pip install cibuildwheel==1.3.0

script: python3 -m cibuildwheel --output-dir dist

after_success:
  - |
    if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then
      python3 -m pip install twine
      python3 -m twine upload --verbose --skip-existing --repository-url https://test.pypi.org/legacy/ dist/*
      if [[ $TRAVIS_TAG ]]; then python3 -m twine upload --verbose --skip-existing dist/*; fi
    fi

notifications:
  email:
    recipients:
      - info@geostat-framework.org

jobs:
  include:
    - name: "black check"
      services: docker
      install: python3 -m pip install black
      script: python3 -m black --check pykrige/ examples/ tests/
      after_success: echo "all files formatted correctly"
      after_failure: echo "some files not formatted correctly"

    - name: "sdist and coverage"
      services: docker
      install:
        - python3 -m pip install -r requirements_setup.txt
        - python3 -m pip install -r requirements_test.txt
        - python3 -m pip install -r requirements.txt
      script:
        - python3 setup.py sdist -d dist
        - python3 setup.py build_ext --inplace
        - python3 -m pytest --cov pykrige --cov-report term-missing -v tests/
        - python3 -m coveralls

    - name: "Linux py35"
      services: docker
      env: CIBW_BUILD="cp35-*"
    - name: "Linux py36"
      services: docker
      env: CIBW_BUILD="cp36-*"
    - name: "Linux py37"
      services: docker
      env: CIBW_BUILD="cp37-*"
    - name: "Linux py38"
      services: docker
      env: CIBW_BUILD="cp38-*"

    - name: "MacOS py35"
      os: osx
      language: shell
      env: CIBW_BUILD="cp35-*"
    - name: "MacOS py36"
      os: osx
      language: shell
      env: CIBW_BUILD="cp36-*"
    - name: "MacOS py37"
      os: osx
      language: shell
      env: CIBW_BUILD="cp37-*"
    - name: "MacOS py38"
      os: osx
      language: shell
      env: CIBW_BUILD="cp38-*"

    - name: "Win py35"
      os: windows
      language: shell
      env: CIBW_BUILD="cp35-*"
    - name: "Win py36"
      os: windows
      language: shell
      env: CIBW_BUILD="cp36-*"
    - name: "Win py37"
      os: windows
      language: shell
      env: CIBW_BUILD="cp37-*"
    - name: "Win py38"
      os: windows
      language: shell
      env: CIBW_BUILD="cp38-*"
